# Generated by Django 3.2.4 on 2021-06-28 00:43

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=32, verbose_name='User email')),
                ('token', models.CharField(default='null', max_length=255, verbose_name='Activation Token')),
                ('valid', models.BooleanField(default=True, verbose_name='Token status')),
            ],
        ),
        migrations.CreateModel(
            name='iTap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('slots', models.IntegerField(default=5)),
                ('tokens', models.JSONField(blank=True, default=dict)),
                ('address', models.CharField(default='NULL', max_length=32)),
                ('city', models.CharField(default='NULL', max_length=32)),
                ('region', models.CharField(default='NULL', max_length=32)),
                ('zipcode', models.CharField(default='NULL', max_length=32)),
                ('key', models.CharField(default='null', max_length=8)),
            ],
        ),
        migrations.CreateModel(
            name='iTapActivation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(default='null', max_length=8)),
                ('activated', models.BooleanField(default=False)),
                ('owner', models.CharField(default='null', max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=32, unique=True)),
                ('name', models.CharField(max_length=32)),
                ('phone', models.CharField(default='null', max_length=9)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('email_verification', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
